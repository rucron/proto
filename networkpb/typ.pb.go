// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: typ.proto

package networkpb

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServingStatus int32

const (
	ServingStatus_UNKNOWN         ServingStatus = 0
	ServingStatus_SERVING         ServingStatus = 1
	ServingStatus_NOT_SERVING     ServingStatus = 2
	ServingStatus_SERVICE_UNKNOWN ServingStatus = 3
)

var ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
	3: "SERVICE_UNKNOWN",
}

var ServingStatus_value = map[string]int32{
	"UNKNOWN":         0,
	"SERVING":         1,
	"NOT_SERVING":     2,
	"SERVICE_UNKNOWN": 3,
}

func (x ServingStatus) Enum() *ServingStatus {
	p := new(ServingStatus)
	*p = x
	return p
}

func (x ServingStatus) String() string {
	return proto.EnumName(ServingStatus_name, int32(x))
}

func (x *ServingStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServingStatus_value, data, "ServingStatus")
	if err != nil {
		return err
	}
	*x = ServingStatus(value)
	return nil
}

func (ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{0}
}

type AdvertiseClientSettings struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=urls" json:"urls,omitempty"`
	HeartbeatMaxRetry    *uint32  `protobuf:"varint,2,req,name=heartbeat_max_retry,json=heartbeatMaxRetry" json:"heartbeat_max_retry,omitempty"`
	HeartbeatInterval    *string  `protobuf:"bytes,3,req,name=heartbeat_interval,json=heartbeatInterval" json:"heartbeat_interval,omitempty"`
	Policy               *string  `protobuf:"bytes,4,req,name=policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdvertiseClientSettings) Reset()         { *m = AdvertiseClientSettings{} }
func (m *AdvertiseClientSettings) String() string { return proto.CompactTextString(m) }
func (*AdvertiseClientSettings) ProtoMessage()    {}
func (*AdvertiseClientSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{0}
}
func (m *AdvertiseClientSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdvertiseClientSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdvertiseClientSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdvertiseClientSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvertiseClientSettings.Merge(m, src)
}
func (m *AdvertiseClientSettings) XXX_Size() int {
	return m.Size()
}
func (m *AdvertiseClientSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvertiseClientSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AdvertiseClientSettings proto.InternalMessageInfo

func (m *AdvertiseClientSettings) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *AdvertiseClientSettings) GetHeartbeatMaxRetry() uint32 {
	if m != nil && m.HeartbeatMaxRetry != nil {
		return *m.HeartbeatMaxRetry
	}
	return 0
}

func (m *AdvertiseClientSettings) GetHeartbeatInterval() string {
	if m != nil && m.HeartbeatInterval != nil {
		return *m.HeartbeatInterval
	}
	return ""
}

func (m *AdvertiseClientSettings) GetPolicy() string {
	if m != nil && m.Policy != nil {
		return *m.Policy
	}
	return ""
}

type ClusterSettings struct {
	AdvertiseClient          *AdvertiseClientSettings `protobuf:"bytes,1,req,name=advertise_client,json=advertiseClient" json:"advertise_client,omitempty"`
	InitialAdvertisePeerUrls []string                 `protobuf:"bytes,2,rep,name=initial_advertise_peer_urls,json=initialAdvertisePeerUrls" json:"initial_advertise_peer_urls,omitempty"`
	InitialCluster           *string                  `protobuf:"bytes,3,req,name=initial_cluster,json=initialCluster" json:"initial_cluster,omitempty"`
	InitialClusterState      *string                  `protobuf:"bytes,4,req,name=initial_cluster_state,json=initialClusterState" json:"initial_cluster_state,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                 `json:"-"`
	XXX_unrecognized         []byte                   `json:"-"`
	XXX_sizecache            int32                    `json:"-"`
}

func (m *ClusterSettings) Reset()         { *m = ClusterSettings{} }
func (m *ClusterSettings) String() string { return proto.CompactTextString(m) }
func (*ClusterSettings) ProtoMessage()    {}
func (*ClusterSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{1}
}
func (m *ClusterSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterSettings.Merge(m, src)
}
func (m *ClusterSettings) XXX_Size() int {
	return m.Size()
}
func (m *ClusterSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterSettings proto.InternalMessageInfo

func (m *ClusterSettings) GetAdvertiseClient() *AdvertiseClientSettings {
	if m != nil {
		return m.AdvertiseClient
	}
	return nil
}

func (m *ClusterSettings) GetInitialAdvertisePeerUrls() []string {
	if m != nil {
		return m.InitialAdvertisePeerUrls
	}
	return nil
}

func (m *ClusterSettings) GetInitialCluster() string {
	if m != nil && m.InitialCluster != nil {
		return *m.InitialCluster
	}
	return ""
}

func (m *ClusterSettings) GetInitialClusterState() string {
	if m != nil && m.InitialClusterState != nil {
		return *m.InitialClusterState
	}
	return ""
}

type SecuritySettings struct {
	Cors                 []string `protobuf:"bytes,1,rep,name=cors" json:"cors,omitempty"`
	KeyFile              *string  `protobuf:"bytes,2,req,name=key_file,json=keyFile" json:"key_file,omitempty"`
	CertFile             *string  `protobuf:"bytes,3,req,name=cert_file,json=certFile" json:"cert_file,omitempty"`
	PeerKeyFile          *string  `protobuf:"bytes,4,req,name=peer_key_file,json=peerKeyFile" json:"peer_key_file,omitempty"`
	PeerCertFile         *string  `protobuf:"bytes,5,req,name=peer_cert_file,json=peerCertFile" json:"peer_cert_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecuritySettings) Reset()         { *m = SecuritySettings{} }
func (m *SecuritySettings) String() string { return proto.CompactTextString(m) }
func (*SecuritySettings) ProtoMessage()    {}
func (*SecuritySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{2}
}
func (m *SecuritySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SecuritySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SecuritySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SecuritySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecuritySettings.Merge(m, src)
}
func (m *SecuritySettings) XXX_Size() int {
	return m.Size()
}
func (m *SecuritySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SecuritySettings.DiscardUnknown(m)
}

var xxx_messageInfo_SecuritySettings proto.InternalMessageInfo

func (m *SecuritySettings) GetCors() []string {
	if m != nil {
		return m.Cors
	}
	return nil
}

func (m *SecuritySettings) GetKeyFile() string {
	if m != nil && m.KeyFile != nil {
		return *m.KeyFile
	}
	return ""
}

func (m *SecuritySettings) GetCertFile() string {
	if m != nil && m.CertFile != nil {
		return *m.CertFile
	}
	return ""
}

func (m *SecuritySettings) GetPeerKeyFile() string {
	if m != nil && m.PeerKeyFile != nil {
		return *m.PeerKeyFile
	}
	return ""
}

func (m *SecuritySettings) GetPeerCertFile() string {
	if m != nil && m.PeerCertFile != nil {
		return *m.PeerCertFile
	}
	return ""
}

type LogSettings struct {
	Dir                  *string  `protobuf:"bytes,1,req,name=dir" json:"dir,omitempty"`
	Level                *string  `protobuf:"bytes,2,req,name=level" json:"level,omitempty"`
	Filter               *string  `protobuf:"bytes,3,req,name=filter" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogSettings) Reset()         { *m = LogSettings{} }
func (m *LogSettings) String() string { return proto.CompactTextString(m) }
func (*LogSettings) ProtoMessage()    {}
func (*LogSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{3}
}
func (m *LogSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LogSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LogSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LogSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogSettings.Merge(m, src)
}
func (m *LogSettings) XXX_Size() int {
	return m.Size()
}
func (m *LogSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LogSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LogSettings proto.InternalMessageInfo

func (m *LogSettings) GetDir() string {
	if m != nil && m.Dir != nil {
		return *m.Dir
	}
	return ""
}

func (m *LogSettings) GetLevel() string {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return ""
}

func (m *LogSettings) GetFilter() string {
	if m != nil && m.Filter != nil {
		return *m.Filter
	}
	return ""
}

type Config struct {
	Cluster              *ClusterSettings  `protobuf:"bytes,1,req,name=cluster" json:"cluster,omitempty"`
	Security             *SecuritySettings `protobuf:"bytes,2,req,name=security" json:"security,omitempty"`
	Log                  *LogSettings      `protobuf:"bytes,3,req,name=log" json:"log,omitempty"`
	ConfigFile           *string           `protobuf:"bytes,4,req,name=config_file,json=configFile" json:"config_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{4}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Config.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return m.Size()
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetCluster() *ClusterSettings {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *Config) GetSecurity() *SecuritySettings {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Config) GetLog() *LogSettings {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *Config) GetConfigFile() string {
	if m != nil && m.ConfigFile != nil {
		return *m.ConfigFile
	}
	return ""
}

type ViewConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewConfigRequest) Reset()         { *m = ViewConfigRequest{} }
func (m *ViewConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ViewConfigRequest) ProtoMessage()    {}
func (*ViewConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{5}
}
func (m *ViewConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ViewConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ViewConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ViewConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewConfigRequest.Merge(m, src)
}
func (m *ViewConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *ViewConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ViewConfigRequest proto.InternalMessageInfo

type ViewConfigResponse struct {
	Err                  *int32   `protobuf:"varint,1,req,name=err" json:"err,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty"`
	Config               *Config  `protobuf:"bytes,3,req,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewConfigResponse) Reset()         { *m = ViewConfigResponse{} }
func (m *ViewConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ViewConfigResponse) ProtoMessage()    {}
func (*ViewConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{6}
}
func (m *ViewConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ViewConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ViewConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ViewConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewConfigResponse.Merge(m, src)
}
func (m *ViewConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *ViewConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ViewConfigResponse proto.InternalMessageInfo

func (m *ViewConfigResponse) GetErr() int32 {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return 0
}

func (m *ViewConfigResponse) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ViewConfigResponse) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type GetGroupRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupRequest) Reset()         { *m = GetGroupRequest{} }
func (m *GetGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetGroupRequest) ProtoMessage()    {}
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{7}
}
func (m *GetGroupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetGroupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupRequest.Merge(m, src)
}
func (m *GetGroupRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupRequest proto.InternalMessageInfo

type GetGroupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupResponse) Reset()         { *m = GetGroupResponse{} }
func (m *GetGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetGroupResponse) ProtoMessage()    {}
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{8}
}
func (m *GetGroupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetGroupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupResponse.Merge(m, src)
}
func (m *GetGroupResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupResponse proto.InternalMessageInfo

type StopRequest struct {
	Force                *bool    `protobuf:"varint,1,req,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{9}
}
func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return m.Size()
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

func (m *StopRequest) GetForce() bool {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return false
}

type StopResponse struct {
	Err                  *int32   `protobuf:"varint,1,req,name=err" json:"err,omitempty"`
	Addr                 *string  `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	DaemonPid            *int32   `protobuf:"varint,3,req,name=daemon_pid,json=daemonPid" json:"daemon_pid,omitempty"`
	Msg                  *string  `protobuf:"bytes,4,req,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b491a83a894f7b5c, []int{10}
}
func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return m.Size()
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

func (m *StopResponse) GetErr() int32 {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return 0
}

func (m *StopResponse) GetAddr() string {
	if m != nil && m.Addr != nil {
		return *m.Addr
	}
	return ""
}

func (m *StopResponse) GetDaemonPid() int32 {
	if m != nil && m.DaemonPid != nil {
		return *m.DaemonPid
	}
	return 0
}

func (m *StopResponse) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.ServingStatus", ServingStatus_name, ServingStatus_value)
	proto.RegisterType((*AdvertiseClientSettings)(nil), "pb.AdvertiseClientSettings")
	proto.RegisterType((*ClusterSettings)(nil), "pb.ClusterSettings")
	proto.RegisterType((*SecuritySettings)(nil), "pb.SecuritySettings")
	proto.RegisterType((*LogSettings)(nil), "pb.LogSettings")
	proto.RegisterType((*Config)(nil), "pb.Config")
	proto.RegisterType((*ViewConfigRequest)(nil), "pb.ViewConfigRequest")
	proto.RegisterType((*ViewConfigResponse)(nil), "pb.ViewConfigResponse")
	proto.RegisterType((*GetGroupRequest)(nil), "pb.GetGroupRequest")
	proto.RegisterType((*GetGroupResponse)(nil), "pb.GetGroupResponse")
	proto.RegisterType((*StopRequest)(nil), "pb.StopRequest")
	proto.RegisterType((*StopResponse)(nil), "pb.StopResponse")
}

func init() { proto.RegisterFile("typ.proto", fileDescriptor_b491a83a894f7b5c) }

var fileDescriptor_b491a83a894f7b5c = []byte{
	// 679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xcd, 0x6e, 0xd3, 0x5a,
	0x10, 0xae, 0x9d, 0xa4, 0x8d, 0xc7, 0x6d, 0x93, 0x9e, 0xf4, 0xde, 0x9b, 0xab, 0x88, 0x10, 0x0c,
	0x12, 0x11, 0x52, 0x23, 0x94, 0x3d, 0x0b, 0x88, 0xda, 0xaa, 0x2a, 0x4d, 0x2b, 0x87, 0x16, 0x09,
	0x21, 0x59, 0x8e, 0x3d, 0x09, 0x47, 0x75, 0x6d, 0x73, 0x7c, 0x92, 0x36, 0x6f, 0xc2, 0x03, 0xb0,
	0x60, 0xc3, 0x7b, 0xb0, 0xe4, 0x11, 0x50, 0x79, 0x06, 0xf6, 0xe8, 0xfc, 0xd8, 0x49, 0x2b, 0x75,
	0x37, 0xf3, 0xcd, 0x77, 0x66, 0xbe, 0x6f, 0xe6, 0x80, 0xc5, 0x17, 0x69, 0x2f, 0x65, 0x09, 0x4f,
	0x88, 0x99, 0x8e, 0x9d, 0xaf, 0x06, 0xfc, 0xf7, 0x3a, 0x9c, 0x23, 0xe3, 0x34, 0xc3, 0x41, 0x44,
	0x31, 0xe6, 0x23, 0xe4, 0x9c, 0xc6, 0xd3, 0x8c, 0x10, 0x28, 0xcf, 0x58, 0x94, 0x35, 0x8d, 0x4e,
	0xa9, 0x6b, 0xb9, 0x32, 0x26, 0x3d, 0x68, 0x7c, 0x42, 0x9f, 0xf1, 0x31, 0xfa, 0xdc, 0xbb, 0xf2,
	0x6f, 0x3c, 0x86, 0x9c, 0x2d, 0x9a, 0x66, 0xc7, 0xec, 0x6e, 0xb9, 0x3b, 0x45, 0xe9, 0xc4, 0xbf,
	0x71, 0x45, 0x81, 0xec, 0x01, 0x59, 0xf2, 0x69, 0xcc, 0x91, 0xcd, 0xfd, 0xa8, 0x59, 0xea, 0x98,
	0x5d, 0x6b, 0x85, 0x7e, 0xa4, 0x0b, 0xe4, 0x5f, 0x58, 0x4f, 0x93, 0x88, 0x06, 0x8b, 0x66, 0x59,
	0x52, 0x74, 0xe6, 0xfc, 0x31, 0xa0, 0x36, 0x88, 0x66, 0x19, 0x47, 0x56, 0xc8, 0x3b, 0x80, 0xba,
	0x9f, 0x2b, 0xf7, 0x02, 0x29, 0xbd, 0x69, 0x74, 0xcc, 0xae, 0xdd, 0x6f, 0xf5, 0xd2, 0x71, 0xef,
	0x01, 0x57, 0x6e, 0xcd, 0xbf, 0x5b, 0x20, 0xaf, 0xa0, 0x45, 0x63, 0xca, 0xa9, 0x1f, 0x79, 0xcb,
	0x7e, 0x29, 0x22, 0xf3, 0xa4, 0x7b, 0x53, 0xba, 0x6f, 0x6a, 0x4a, 0xd1, 0xf5, 0x0c, 0x91, 0x9d,
	0x8b, 0x8d, 0x3c, 0x87, 0x5a, 0xfe, 0x3c, 0x50, 0x0a, 0xb5, 0xbd, 0x6d, 0x0d, 0x6b, 0xdd, 0xa4,
	0x0f, 0xff, 0xdc, 0x23, 0x7a, 0x19, 0xf7, 0x39, 0x6a, 0xab, 0x8d, 0xbb, 0xf4, 0x91, 0x28, 0x39,
	0xdf, 0x0c, 0xa8, 0x8f, 0x30, 0x98, 0x31, 0xca, 0x17, 0xab, 0x77, 0x09, 0x12, 0x56, 0xdc, 0x45,
	0xc4, 0xe4, 0x7f, 0xa8, 0x5e, 0xe2, 0xc2, 0x9b, 0xd0, 0x08, 0xe5, 0x31, 0x2c, 0x77, 0xe3, 0x12,
	0x17, 0x07, 0x34, 0x42, 0xd2, 0x02, 0x2b, 0x40, 0xc6, 0x55, 0x4d, 0x49, 0xab, 0x0a, 0x40, 0x16,
	0x1d, 0xd8, 0x92, 0x56, 0x8b, 0xc7, 0x4a, 0x8c, 0x2d, 0xc0, 0x63, 0xdd, 0xe0, 0x19, 0x6c, 0x4b,
	0xce, 0xb2, 0x4b, 0x45, 0x92, 0x36, 0x05, 0x3a, 0xd0, 0x9d, 0x9c, 0x13, 0xb0, 0xdf, 0x26, 0xd3,
	0x42, 0x64, 0x1d, 0x4a, 0x21, 0x65, 0xf2, 0x20, 0x96, 0x2b, 0x42, 0xb2, 0x0b, 0x95, 0x08, 0xe7,
	0x18, 0x69, 0x7d, 0x2a, 0x11, 0x17, 0x9f, 0xd0, 0x68, 0xb9, 0x35, 0x9d, 0x39, 0xdf, 0x0d, 0x58,
	0x1f, 0x24, 0xf1, 0x84, 0x4e, 0xc9, 0x1e, 0x6c, 0xe4, 0x9b, 0x55, 0xf7, 0x6d, 0x88, 0xfb, 0xde,
	0xfb, 0x0e, 0x6e, 0xce, 0x21, 0x2f, 0xa1, 0x9a, 0xe9, 0x95, 0xc9, 0x51, 0x76, 0x7f, 0x57, 0xf0,
	0xef, 0xaf, 0xd1, 0x2d, 0x58, 0xe4, 0x09, 0x94, 0xa2, 0x64, 0x2a, 0x05, 0xd8, 0xfd, 0x9a, 0x20,
	0xaf, 0x38, 0x71, 0x45, 0x8d, 0x3c, 0x06, 0x3b, 0x90, 0x6a, 0x56, 0xb7, 0x04, 0x0a, 0x92, 0xf6,
	0x1b, 0xb0, 0x73, 0x41, 0xf1, 0x5a, 0x49, 0x76, 0xf1, 0xf3, 0x0c, 0x33, 0xee, 0x7c, 0x04, 0xb2,
	0x0a, 0x66, 0x69, 0x12, 0x67, 0x28, 0x56, 0x83, 0x4c, 0x79, 0xa9, 0xb8, 0x22, 0x14, 0xc8, 0x55,
	0x36, 0xd5, 0x8b, 0x11, 0x21, 0x71, 0x60, 0x5d, 0x35, 0xd7, 0xaa, 0x40, 0x5a, 0x56, 0x7d, 0x74,
	0xc5, 0xd9, 0x81, 0xda, 0x21, 0xf2, 0x43, 0x96, 0xcc, 0xd2, 0x7c, 0x20, 0x81, 0xfa, 0x12, 0x52,
	0xe3, 0x9c, 0xa7, 0x60, 0x8f, 0x78, 0x92, 0x53, 0xc4, 0x19, 0x26, 0x09, 0x0b, 0x50, 0xce, 0xaf,
	0xba, 0x2a, 0x71, 0x10, 0x36, 0x15, 0xe9, 0x41, 0x8d, 0x04, 0xca, 0x7e, 0x18, 0xb2, 0xa6, 0xd9,
	0x31, 0xc4, 0xaf, 0x13, 0x31, 0x79, 0x04, 0x10, 0xfa, 0x78, 0x95, 0xc4, 0x5e, 0x4a, 0x43, 0xa9,
	0xb4, 0xe2, 0x5a, 0x0a, 0x39, 0xa3, 0x61, 0x6e, 0xab, 0x5c, 0xd8, 0x7a, 0x71, 0x0a, 0x5b, 0x23,
	0x64, 0x73, 0x1a, 0x4f, 0xc5, 0xff, 0x9e, 0x65, 0xc4, 0x86, 0x8d, 0xf3, 0xe1, 0xf1, 0xf0, 0xf4,
	0xfd, 0xb0, 0xbe, 0x26, 0x92, 0xd1, 0xbe, 0x7b, 0x71, 0x34, 0x3c, 0xac, 0x1b, 0xa4, 0x06, 0xf6,
	0xf0, 0xf4, 0x9d, 0x97, 0x03, 0x26, 0x69, 0x40, 0x4d, 0x26, 0x83, 0x7d, 0x2f, 0x7f, 0x52, 0x7a,
	0xd3, 0xfa, 0x71, 0xdb, 0x36, 0x7e, 0xde, 0xb6, 0x8d, 0x5f, 0xb7, 0x6d, 0xe3, 0xcb, 0xef, 0xf6,
	0xda, 0x07, 0x2b, 0x46, 0x7e, 0x9d, 0xb0, 0xcb, 0x74, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0xfe,
	0xb9, 0x9e, 0x96, 0xec, 0x04, 0x00, 0x00,
}

func (m *AdvertiseClientSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdvertiseClientSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdvertiseClientSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Policy == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Policy)
		copy(dAtA[i:], *m.Policy)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Policy)))
		i--
		dAtA[i] = 0x22
	}
	if m.HeartbeatInterval == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.HeartbeatInterval)
		copy(dAtA[i:], *m.HeartbeatInterval)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.HeartbeatInterval)))
		i--
		dAtA[i] = 0x1a
	}
	if m.HeartbeatMaxRetry == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintTyp(dAtA, i, uint64(*m.HeartbeatMaxRetry))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Urls) > 0 {
		for iNdEx := len(m.Urls) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Urls[iNdEx])
			copy(dAtA[i:], m.Urls[iNdEx])
			i = encodeVarintTyp(dAtA, i, uint64(len(m.Urls[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ClusterSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InitialClusterState == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.InitialClusterState)
		copy(dAtA[i:], *m.InitialClusterState)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.InitialClusterState)))
		i--
		dAtA[i] = 0x22
	}
	if m.InitialCluster == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.InitialCluster)
		copy(dAtA[i:], *m.InitialCluster)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.InitialCluster)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.InitialAdvertisePeerUrls) > 0 {
		for iNdEx := len(m.InitialAdvertisePeerUrls) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InitialAdvertisePeerUrls[iNdEx])
			copy(dAtA[i:], m.InitialAdvertisePeerUrls[iNdEx])
			i = encodeVarintTyp(dAtA, i, uint64(len(m.InitialAdvertisePeerUrls[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.AdvertiseClient == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.AdvertiseClient.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTyp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SecuritySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SecuritySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SecuritySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PeerCertFile == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.PeerCertFile)
		copy(dAtA[i:], *m.PeerCertFile)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.PeerCertFile)))
		i--
		dAtA[i] = 0x2a
	}
	if m.PeerKeyFile == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.PeerKeyFile)
		copy(dAtA[i:], *m.PeerKeyFile)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.PeerKeyFile)))
		i--
		dAtA[i] = 0x22
	}
	if m.CertFile == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.CertFile)
		copy(dAtA[i:], *m.CertFile)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.CertFile)))
		i--
		dAtA[i] = 0x1a
	}
	if m.KeyFile == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.KeyFile)
		copy(dAtA[i:], *m.KeyFile)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.KeyFile)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cors) > 0 {
		for iNdEx := len(m.Cors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Cors[iNdEx])
			copy(dAtA[i:], m.Cors[iNdEx])
			i = encodeVarintTyp(dAtA, i, uint64(len(m.Cors[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *LogSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LogSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LogSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Filter == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Filter)
		copy(dAtA[i:], *m.Filter)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Filter)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Level == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Level)
		copy(dAtA[i:], *m.Level)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Level)))
		i--
		dAtA[i] = 0x12
	}
	if m.Dir == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Dir)
		copy(dAtA[i:], *m.Dir)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Dir)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Config) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Config) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Config) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConfigFile == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.ConfigFile)
		copy(dAtA[i:], *m.ConfigFile)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.ConfigFile)))
		i--
		dAtA[i] = 0x22
	}
	if m.Log == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Log.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTyp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Security == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Security.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTyp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Cluster == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Cluster.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTyp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ViewConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ViewConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ViewConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ViewConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ViewConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ViewConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTyp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Msg == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Msg)
		copy(dAtA[i:], *m.Msg)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Err == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintTyp(dAtA, i, uint64(*m.Err))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetGroupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetGroupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetGroupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetGroupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetGroupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetGroupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StopRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StopRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StopRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Force == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i--
		if *m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StopResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StopResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StopResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Msg)
		copy(dAtA[i:], *m.Msg)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Msg)))
		i--
		dAtA[i] = 0x22
	}
	if m.DaemonPid == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintTyp(dAtA, i, uint64(*m.DaemonPid))
		i--
		dAtA[i] = 0x18
	}
	if m.Addr != nil {
		i -= len(*m.Addr)
		copy(dAtA[i:], *m.Addr)
		i = encodeVarintTyp(dAtA, i, uint64(len(*m.Addr)))
		i--
		dAtA[i] = 0x12
	}
	if m.Err == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintTyp(dAtA, i, uint64(*m.Err))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTyp(dAtA []byte, offset int, v uint64) int {
	offset -= sovTyp(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AdvertiseClientSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Urls) > 0 {
		for _, s := range m.Urls {
			l = len(s)
			n += 1 + l + sovTyp(uint64(l))
		}
	}
	if m.HeartbeatMaxRetry != nil {
		n += 1 + sovTyp(uint64(*m.HeartbeatMaxRetry))
	}
	if m.HeartbeatInterval != nil {
		l = len(*m.HeartbeatInterval)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.Policy != nil {
		l = len(*m.Policy)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdvertiseClient != nil {
		l = m.AdvertiseClient.Size()
		n += 1 + l + sovTyp(uint64(l))
	}
	if len(m.InitialAdvertisePeerUrls) > 0 {
		for _, s := range m.InitialAdvertisePeerUrls {
			l = len(s)
			n += 1 + l + sovTyp(uint64(l))
		}
	}
	if m.InitialCluster != nil {
		l = len(*m.InitialCluster)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.InitialClusterState != nil {
		l = len(*m.InitialClusterState)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SecuritySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cors) > 0 {
		for _, s := range m.Cors {
			l = len(s)
			n += 1 + l + sovTyp(uint64(l))
		}
	}
	if m.KeyFile != nil {
		l = len(*m.KeyFile)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.CertFile != nil {
		l = len(*m.CertFile)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.PeerKeyFile != nil {
		l = len(*m.PeerKeyFile)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.PeerCertFile != nil {
		l = len(*m.PeerCertFile)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LogSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Dir != nil {
		l = len(*m.Dir)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.Level != nil {
		l = len(*m.Level)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.Filter != nil {
		l = len(*m.Filter)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Config) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cluster != nil {
		l = m.Cluster.Size()
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.Security != nil {
		l = m.Security.Size()
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.Log != nil {
		l = m.Log.Size()
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.ConfigFile != nil {
		l = len(*m.ConfigFile)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ViewConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ViewConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Err != nil {
		n += 1 + sovTyp(uint64(*m.Err))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetGroupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetGroupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StopRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Force != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StopResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Err != nil {
		n += 1 + sovTyp(uint64(*m.Err))
	}
	if m.Addr != nil {
		l = len(*m.Addr)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.DaemonPid != nil {
		n += 1 + sovTyp(uint64(*m.DaemonPid))
	}
	if m.Msg != nil {
		l = len(*m.Msg)
		n += 1 + l + sovTyp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTyp(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTyp(x uint64) (n int) {
	return sovTyp(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AdvertiseClientSettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdvertiseClientSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdvertiseClientSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Urls", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Urls = append(m.Urls, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeartbeatMaxRetry", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HeartbeatMaxRetry = &v
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeartbeatInterval", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HeartbeatInterval = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Policy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Policy = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterSettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdvertiseClient", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdvertiseClient == nil {
				m.AdvertiseClient = &AdvertiseClientSettings{}
			}
			if err := m.AdvertiseClient.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialAdvertisePeerUrls", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitialAdvertisePeerUrls = append(m.InitialAdvertisePeerUrls, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialCluster", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InitialCluster = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialClusterState", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InitialClusterState = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SecuritySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SecuritySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SecuritySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cors = append(m.Cors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.KeyFile = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CertFile = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerKeyFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PeerKeyFile = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerCertFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PeerCertFile = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LogSettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LogSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LogSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dir", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Dir = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Level = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Filter = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Config) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cluster", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cluster == nil {
				m.Cluster = &ClusterSettings{}
			}
			if err := m.Cluster.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Security", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Security == nil {
				m.Security = &SecuritySettings{}
			}
			if err := m.Security.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Log", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Log == nil {
				m.Log = &LogSettings{}
			}
			if err := m.Log.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ConfigFile = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ViewConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ViewConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ViewConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ViewConfigResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ViewConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ViewConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Err = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &Config{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetGroupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGroupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGroupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetGroupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGroupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGroupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StopRequest) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StopRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StopRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Force = &b
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StopResponse) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StopResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StopResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Err = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Addr = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DaemonPid", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DaemonPid = &v
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTyp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTyp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Msg = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipTyp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTyp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTyp(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTyp
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTyp
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTyp
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTyp
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTyp
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTyp        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTyp          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTyp = fmt.Errorf("proto: unexpected end of group")
)
